{"version":3,"file":"index.esm2017.js","sources":["../src/util/errors.ts","../src/helpers/extract-app-config.ts","../src/helpers/array-base64-translator.ts","../src/helpers/migrate-old-database.ts","../src/helpers/idb-manager.ts","../src/util/constants.ts","../src/core/api.ts","../src/core/token-management.ts","../src/interfaces/internal-message.ts","../src/helpers/is-console-message.ts","../src/controllers/window-controller.ts","../src/helpers/sleep.ts","../src/controllers/sw-controller.ts","../src/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  AVAILABLE_IN_WINDOW = 'only-available-in-window',\n  AVAILABLE_IN_SW = 'only-available-in-sw',\n  PERMISSION_DEFAULT = 'permission-default',\n  PERMISSION_BLOCKED = 'permission-blocked',\n  UNSUPPORTED_BROWSER = 'unsupported-browser',\n  FAILED_DEFAULT_REGISTRATION = 'failed-service-worker-registration',\n  TOKEN_SUBSCRIBE_FAILED = 'token-subscribe-failed',\n  TOKEN_SUBSCRIBE_NO_TOKEN = 'token-subscribe-no-token',\n  TOKEN_UNSUBSCRIBE_FAILED = 'token-unsubscribe-failed',\n  TOKEN_UPDATE_FAILED = 'token-update-failed',\n  TOKEN_UPDATE_NO_TOKEN = 'token-update-no-token',\n  INVALID_BG_HANDLER = 'invalid-bg-handler',\n  USE_SW_AFTER_GET_TOKEN = 'use-sw-after-get-token',\n  INVALID_SW_REGISTRATION = 'invalid-sw-registration',\n  USE_VAPID_KEY_AFTER_GET_TOKEN = 'use-vapid-key-after-get-token',\n  INVALID_VAPID_KEY = 'invalid-vapid-key'\n}\n\nexport const ERROR_MAP: ErrorMap<ErrorCode> = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]:\n    'Missing App configuration value: \"{$valueName}\"',\n  [ErrorCode.AVAILABLE_IN_WINDOW]:\n    'This method is available in a Window context.',\n  [ErrorCode.AVAILABLE_IN_SW]:\n    'This method is available in a service worker context.',\n  [ErrorCode.PERMISSION_DEFAULT]:\n    'The notification permission was not granted and dismissed instead.',\n  [ErrorCode.PERMISSION_BLOCKED]:\n    'The notification permission was not granted and blocked instead.',\n  [ErrorCode.UNSUPPORTED_BROWSER]:\n    \"This browser doesn't support the API's required to use the firebase SDK.\",\n  [ErrorCode.FAILED_DEFAULT_REGISTRATION]:\n    'We are unable to register the default service worker. {$browserErrorMessage}',\n  [ErrorCode.TOKEN_SUBSCRIBE_FAILED]:\n    'A problem occured while subscribing the user to FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN]:\n    'FCM returned no token when subscribing the user to push.',\n  [ErrorCode.TOKEN_UNSUBSCRIBE_FAILED]:\n    'A problem occured while unsubscribing the ' +\n    'user from FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_UPDATE_FAILED]:\n    'A problem occured while updating the user from FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_UPDATE_NO_TOKEN]:\n    'FCM returned no token when updating the user to push.',\n  [ErrorCode.USE_SW_AFTER_GET_TOKEN]:\n    'The useServiceWorker() method may only be called once and must be ' +\n    'called before calling getToken() to ensure your service worker is used.',\n  [ErrorCode.INVALID_SW_REGISTRATION]:\n    'The input to useServiceWorker() must be a ServiceWorkerRegistration.',\n  [ErrorCode.INVALID_BG_HANDLER]:\n    'The input to setBackgroundMessageHandler() must be a function.',\n  [ErrorCode.INVALID_VAPID_KEY]: 'The public VAPID key must be a string.',\n  [ErrorCode.USE_VAPID_KEY_AFTER_GET_TOKEN]:\n    'The usePublicVapidKey() method may only be called once and must be ' +\n    'called before calling getToken() to ensure your VAPID key is used.'\n};\n\ninterface ErrorParams {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: {\n    valueName: string;\n  };\n  [ErrorCode.FAILED_DEFAULT_REGISTRATION]: { browserErrorMessage: string };\n  [ErrorCode.TOKEN_SUBSCRIBE_FAILED]: { errorInfo: string };\n  [ErrorCode.TOKEN_UNSUBSCRIBE_FAILED]: { errorInfo: string };\n  [ErrorCode.TOKEN_UPDATE_FAILED]: { errorInfo: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  'messaging',\n  'Messaging',\n  ERROR_MAP\n);\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app-types';\nimport { FirebaseError } from '@firebase/util';\nimport { AppConfig } from '../interfaces/app-config';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration Object');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n\n  // Required app config keys\n  const configKeys: ReadonlyArray<keyof FirebaseOptions> = [\n    'projectId',\n    'apiKey',\n    'appId',\n    'messagingSenderId'\n  ];\n\n  const { options } = app;\n  for (const keyName of configKeys) {\n    if (!options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: options.projectId!,\n    apiKey: options.apiKey!,\n    appId: options.appId!,\n    senderId: options.messagingSenderId!\n  };\n}\n\nfunction getMissingValueError(valueName: string): FirebaseError {\n  return ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES, {\n    valueName\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function arrayToBase64(array: Uint8Array | ArrayBuffer): string {\n  const uint8Array = new Uint8Array(array);\n  const base64String = btoa(String.fromCharCode(...uint8Array));\n  return base64String\n    .replace(/=/g, '')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_');\n}\n\nexport function base64ToArray(base64String: string): Uint8Array {\n  const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n  const base64 = (base64String + padding)\n    .replace(/\\-/g, '+')\n    .replace(/_/g, '/');\n\n  const rawData = atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n  return outputArray;\n}","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { openDb, deleteDb } from 'idb';\nimport { TokenDetails } from '../interfaces/token-details';\nimport { arrayToBase64 } from './array-base64-translator';\n\n// https://github.com/firebase/firebase-js-sdk/blob/7857c212f944a2a9eb421fd4cb7370181bc034b5/packages/messaging/src/interfaces/token-details.ts\nexport interface V2TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: string | Uint8Array;\n  subscription: PushSubscription;\n  fcmSenderId: string;\n  fcmPushSet: string;\n  createTime?: number;\n  endpoint?: string;\n  auth?: string;\n  p256dh?: string;\n}\n\n// https://github.com/firebase/firebase-js-sdk/blob/6b5b15ce4ea3df5df5df8a8b33a4e41e249c7715/packages/messaging/src/interfaces/token-details.ts\nexport interface V3TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: Uint8Array;\n  fcmSenderId: string;\n  fcmPushSet: string;\n  endpoint: string;\n  auth: ArrayBuffer;\n  p256dh: ArrayBuffer;\n  createTime: number;\n}\n\n// https://github.com/firebase/firebase-js-sdk/blob/9567dba664732f681fa7fe60f5b7032bb1daf4c9/packages/messaging/src/interfaces/token-details.ts\nexport interface V4TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: Uint8Array;\n  fcmSenderId: string;\n  endpoint: string;\n  auth: ArrayBufferLike;\n  p256dh: ArrayBufferLike;\n  createTime: number;\n}\n\nconst OLD_DB_NAME = 'fcm_token_details_db';\n/**\n * The last DB version of 'fcm_token_details_db' was 4. This is one higher,\n * so that the upgrade callback is called for all versions of the old DB.\n */\nconst OLD_DB_VERSION = 5;\nconst OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\n\nexport async function migrateOldDatabase(\n  senderId: string\n): Promise<TokenDetails | null> {\n  if ('databases' in indexedDB) {\n    // indexedDb.databases() is an IndexedDB v3 API\n    // and does not exist in all browsers.\n    // TODO: Remove typecast when it lands in TS types.\n    const databases = await (indexedDB as {\n      databases(): Promise<Array<{ name: string; version: number }>>;\n    }).databases();\n    const dbNames = databases.map(db => db.name);\n\n    if (!dbNames.includes(OLD_DB_NAME)) {\n      // old DB didn't exist, no need to open.\n      return null;\n    }\n  }\n\n  let tokenDetails: TokenDetails | null = null;\n\n  const db = await openDb(OLD_DB_NAME, OLD_DB_VERSION, async db => {\n    if (db.oldVersion < 2) {\n      // Database too old, skip migration.\n      return;\n    }\n\n    if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\n      // Database did not exist. Nothing to do.\n      return;\n    }\n\n    const objectStore = db.transaction.objectStore(OLD_OBJECT_STORE_NAME);\n    const value = await objectStore.index('fcmSenderId').get(senderId);\n    await objectStore.clear();\n\n    if (!value) {\n      // No entry in the database, nothing to migrate.\n      return;\n    }\n\n    if (db.oldVersion === 2) {\n      const oldDetails = value as V2TokenDetails;\n\n      if (!oldDetails.auth || !oldDetails.p256dh || !oldDetails.endpoint) {\n        return;\n      }\n\n      tokenDetails = {\n        token: oldDetails.fcmToken,\n        createTime: oldDetails.createTime ?? Date.now(),\n        subscriptionOptions: {\n          auth: oldDetails.auth,\n          p256dh: oldDetails.p256dh,\n          endpoint: oldDetails.endpoint,\n          swScope: oldDetails.swScope,\n          vapidKey:\n            typeof oldDetails.vapidKey === 'string'\n              ? oldDetails.vapidKey\n              : arrayToBase64(oldDetails.vapidKey)\n        }\n      };\n    } else if (db.oldVersion === 3) {\n      const oldDetails = value as V3TokenDetails;\n\n      tokenDetails = {\n        token: oldDetails.fcmToken,\n        createTime: oldDetails.createTime,\n        subscriptionOptions: {\n          auth: arrayToBase64(oldDetails.auth),\n          p256dh: arrayToBase64(oldDetails.p256dh),\n          endpoint: oldDetails.endpoint,\n          swScope: oldDetails.swScope,\n          vapidKey: arrayToBase64(oldDetails.vapidKey)\n        }\n      };\n    } else if (db.oldVersion === 4) {\n      const oldDetails = value as V4TokenDetails;\n\n      tokenDetails = {\n        token: oldDetails.fcmToken,\n        createTime: oldDetails.createTime,\n        subscriptionOptions: {\n          auth: arrayToBase64(oldDetails.auth),\n          p256dh: arrayToBase64(oldDetails.p256dh),\n          endpoint: oldDetails.endpoint,\n          swScope: oldDetails.swScope,\n          vapidKey: arrayToBase64(oldDetails.vapidKey)\n        }\n      };\n    }\n  });\n  db.close();\n\n  // Delete all old databases.\n  await deleteDb(OLD_DB_NAME);\n  await deleteDb('fcm_vapid_details_db');\n  await deleteDb('undefined');\n\n  return checkTokenDetails(tokenDetails) ? tokenDetails : null;\n}\n\nfunction checkTokenDetails(\n  tokenDetails: TokenDetails | null\n): tokenDetails is TokenDetails {\n  if (!tokenDetails || !tokenDetails.subscriptionOptions) {\n    return false;\n  }\n  const { subscriptionOptions } = tokenDetails;\n  return (\n    typeof tokenDetails.createTime === 'number' &&\n    tokenDetails.createTime > 0 &&\n    typeof tokenDetails.token === 'string' &&\n    tokenDetails.token.length > 0 &&\n    typeof subscriptionOptions.auth === 'string' &&\n    subscriptionOptions.auth.length > 0 &&\n    typeof subscriptionOptions.p256dh === 'string' &&\n    subscriptionOptions.p256dh.length > 0 &&\n    typeof subscriptionOptions.endpoint === 'string' &&\n    subscriptionOptions.endpoint.length > 0 &&\n    typeof subscriptionOptions.swScope === 'string' &&\n    subscriptionOptions.swScope.length > 0 &&\n    typeof subscriptionOptions.vapidKey === 'string' &&\n    subscriptionOptions.vapidKey.length > 0\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DB, openDb, deleteDb } from 'idb';\nimport { TokenDetails } from '../interfaces/token-details';\nimport { migrateOldDatabase } from './migrate-old-database';\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\n\n// Exported for tests.\nexport const DATABASE_NAME = 'firebase-messaging-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-messaging-store';\n\nlet dbPromise: Promise<DB> | null = null;\nfunction getDbPromise(): Promise<DB> {\n  if (!dbPromise) {\n    dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, upgradeDb => {\n      // We don't use 'break' in this switch statement, the fall-through\n      // behavior is what we want, because if there are multiple versions between\n      // the old version and the current version, we want ALL the migrations\n      // that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (upgradeDb.oldVersion) {\n        case 0:\n          upgradeDb.createObjectStore(OBJECT_STORE_NAME);\n      }\n    });\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function dbGet(\n  firebaseDependencies: FirebaseInternalDependencies\n): Promise<TokenDetails | undefined> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tokenDetails = await db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key);\n\n  if (tokenDetails) {\n    return tokenDetails;\n  } else {\n    // Check if there is a tokenDetails object in the old DB.\n    const oldTokenDetails = await migrateOldDatabase(\n      firebaseDependencies.appConfig.senderId\n    );\n    if (oldTokenDetails) {\n      await dbSet(firebaseDependencies, oldTokenDetails);\n      return oldTokenDetails;\n    }\n  }\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function dbSet(\n  firebaseDependencies: FirebaseInternalDependencies,\n  tokenDetails: TokenDetails\n): Promise<TokenDetails> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).put(tokenDetails, key);\n  await tx.complete;\n  return tokenDetails;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function dbRemove(\n  firebaseDependencies: FirebaseInternalDependencies\n): Promise<void> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.complete;\n}\n\n/** Deletes the DB. Useful for tests. */\nexport async function dbDelete(): Promise<void> {\n  if (dbPromise) {\n    (await dbPromise).close();\n    await deleteDb(DATABASE_NAME);\n    dbPromise = null;\n  }\n}\n\nfunction getKey({ appConfig }: FirebaseInternalDependencies): string {\n  return appConfig.appId;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\nexport const DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\n\nexport const DEFAULT_VAPID_KEY =\n  'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4';\n\nexport const ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\n\n/** Key of FCM Payload in Notification's data field. */\nexport const FCM_MSG = 'FCM_MSG';\n\nexport const CONSOLE_CAMPAIGN_ID = 'google.c.a.c_id';\nexport const CONSOLE_CAMPAIGN_NAME = 'google.c.a.c_l';\nexport const CONSOLE_CAMPAIGN_TIME = 'google.c.a.ts';\n/** Set to '1' if Analytics is enabled for the campaign */\nexport const CONSOLE_CAMPAIGN_ANALYTICS_ENABLED = 'google.c.a.e';\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorCode, ERROR_FACTORY } from '../util/errors';\nimport { DEFAULT_VAPID_KEY, ENDPOINT } from '../util/constants';\nimport { TokenDetails, SubscriptionOptions } from '../interfaces/token-details';\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { AppConfig } from '../interfaces/app-config';\n\nexport interface ApiResponse {\n  token?: string;\n  error?: { message: string };\n}\n\nexport interface ApiRequestBody {\n  web: {\n    endpoint: string;\n    p256dh: string;\n    auth: string;\n    applicationPubKey?: string;\n  };\n}\n\nexport async function requestGetToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  subscriptionOptions: SubscriptionOptions\n): Promise<string> {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(subscriptionOptions);\n\n  const subscribeOptions = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  let responseData: ApiResponse;\n  try {\n    const response = await fetch(\n      getEndpoint(firebaseDependencies.appConfig),\n      subscribeOptions\n    );\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_FAILED, {\n      errorInfo: err\n    });\n  }\n\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_FAILED, {\n      errorInfo: message\n    });\n  }\n\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN);\n  }\n\n  return responseData.token;\n}\n\nexport async function requestUpdateToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  tokenDetails: TokenDetails\n): Promise<string> {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(tokenDetails.subscriptionOptions!);\n\n  const updateOptions = {\n    method: 'PATCH',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  let responseData: ApiResponse;\n  try {\n    const response = await fetch(\n      `${getEndpoint(firebaseDependencies.appConfig)}/${tokenDetails.token}`,\n      updateOptions\n    );\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_FAILED, {\n      errorInfo: err\n    });\n  }\n\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_FAILED, {\n      errorInfo: message\n    });\n  }\n\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_NO_TOKEN);\n  }\n\n  return responseData.token;\n}\n\nexport async function requestDeleteToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  token: string\n): Promise<void> {\n  const headers = await getHeaders(firebaseDependencies);\n\n  const unsubscribeOptions = {\n    method: 'DELETE',\n    headers\n  };\n\n  try {\n    const response = await fetch(\n      `${getEndpoint(firebaseDependencies.appConfig)}/${token}`,\n      unsubscribeOptions\n    );\n    const responseData: ApiResponse = await response.json();\n    if (responseData.error) {\n      const message = responseData.error.message;\n      throw ERROR_FACTORY.create(ErrorCode.TOKEN_UNSUBSCRIBE_FAILED, {\n        errorInfo: message\n      });\n    }\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UNSUBSCRIBE_FAILED, {\n      errorInfo: err\n    });\n  }\n}\n\nfunction getEndpoint({ projectId }: AppConfig): string {\n  return `${ENDPOINT}/projects/${projectId!}/registrations`;\n}\n\nasync function getHeaders({\n  appConfig,\n  installations\n}: FirebaseInternalDependencies): Promise<Headers> {\n  const authToken = await installations.getToken();\n\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': appConfig.apiKey!,\n    'x-goog-firebase-installations-auth': `FIS ${authToken}`\n  });\n}\n\nfunction getBody({\n  p256dh,\n  auth,\n  endpoint,\n  vapidKey\n}: SubscriptionOptions): ApiRequestBody {\n  const body: ApiRequestBody = {\n    web: {\n      endpoint,\n      auth,\n      p256dh\n    }\n  };\n\n  if (vapidKey !== DEFAULT_VAPID_KEY) {\n    body.web.applicationPubKey = vapidKey;\n  }\n\n  return body;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { dbGet, dbSet, dbRemove } from '../helpers/idb-manager';\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { TokenDetails, SubscriptionOptions } from '../interfaces/token-details';\nimport { requestUpdateToken, requestGetToken, requestDeleteToken } from './api';\nimport { arrayToBase64, base64ToArray} from '../helpers/array-base64-translator';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\n/** UpdateRegistration will be called once every week. */\nconst TOKEN_EXPIRATION_MS = 7 * 24 * 60 * 60 * 1000; // 7 days\n\nexport async function getToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  swRegistration: ServiceWorkerRegistration,\n  vapidKey: string\n): Promise<string> {\n  if (Notification.permission !== 'granted') {\n    throw ERROR_FACTORY.create(ErrorCode.PERMISSION_BLOCKED);\n  }\n\n  // If a PushSubscription exists it's returned, otherwise a new subscription\n  // is generated and returned.\n  const pushSubscription = await getPushSubscription(swRegistration, vapidKey);\n  const tokenDetails = await dbGet(firebaseDependencies);\n\n  const subscriptionOptions: SubscriptionOptions = {\n    vapidKey,\n    swScope: swRegistration.scope,\n    endpoint: pushSubscription.endpoint,\n    auth: arrayToBase64(pushSubscription.getKey('auth')!),\n    p256dh: arrayToBase64(pushSubscription.getKey('p256dh')!)\n  };\n\n  if (!tokenDetails) {\n    // No token, get a new one.\n    return getNewToken(firebaseDependencies, subscriptionOptions);\n  } else if (\n    !isTokenValid(tokenDetails.subscriptionOptions!, subscriptionOptions)\n  ) {\n    // Invalid token, get a new one.\n    try {\n      await requestDeleteToken(firebaseDependencies, tokenDetails.token);\n    } catch (e) {\n      // Suppress errors because of #2364\n      console.warn(e);\n    }\n\n    return getNewToken(firebaseDependencies, subscriptionOptions);\n  } else if (Date.now() >= tokenDetails.createTime + TOKEN_EXPIRATION_MS) {\n    // Weekly token refresh\n    return updateToken(\n      {\n        token: tokenDetails.token,\n        createTime: Date.now(),\n        subscriptionOptions\n      },\n      firebaseDependencies,\n      swRegistration\n    );\n  } else {\n    // Valid token, nothing to do.\n    return tokenDetails.token;\n  }\n}\n\n/**\n * This method deletes the token from the database, unsubscribes the token from\n * FCM, and unregisters the push subscription if it exists.\n */\nexport async function deleteToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  swRegistration: ServiceWorkerRegistration\n): Promise<boolean> {\n  const tokenDetails = await dbGet(firebaseDependencies);\n  if (tokenDetails) {\n    await requestDeleteToken(firebaseDependencies, tokenDetails.token);\n    await dbRemove(firebaseDependencies);\n  }\n\n  // Unsubscribe from the push subscription.\n  const pushSubscription = await swRegistration.pushManager.getSubscription();\n  if (pushSubscription) {\n    return pushSubscription.unsubscribe();\n  }\n\n  // If there's no SW, consider it a success.\n  return true;\n}\n\nasync function updateToken(\n  tokenDetails: TokenDetails,\n  firebaseDependencies: FirebaseInternalDependencies,\n  swRegistration: ServiceWorkerRegistration\n): Promise<string> {\n  try {\n    const updatedToken = await requestUpdateToken(\n      firebaseDependencies,\n      tokenDetails\n    );\n\n    const updatedTokenDetails: TokenDetails = {\n      token: updatedToken,\n      createTime: Date.now(),\n      ...tokenDetails\n    };\n\n    await dbSet(firebaseDependencies, updatedTokenDetails);\n    return updatedToken;\n  } catch (e) {\n    await deleteToken(firebaseDependencies, swRegistration);\n    throw e;\n  }\n}\n\nasync function getNewToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  subscriptionOptions: SubscriptionOptions\n): Promise<string> {\n  const token = await requestGetToken(\n    firebaseDependencies,\n    subscriptionOptions\n  );\n  const tokenDetails: TokenDetails = {\n    token,\n    createTime: Date.now(),\n    subscriptionOptions\n  };\n  await dbSet(firebaseDependencies, tokenDetails);\n  return tokenDetails.token;\n}\n\n/**\n * Gets a PushSubscription for the current user.\n */\nasync function getPushSubscription(\n  swRegistration: ServiceWorkerRegistration,\n  vapidKey: string\n): Promise<PushSubscription> {\n  const subscription = await swRegistration.pushManager.getSubscription();\n  if (subscription) {\n    return subscription;\n  }\n  return swRegistration.pushManager.subscribe({\n    userVisibleOnly: true,\n    // Chrome <= 75 doesn't support base64-encoded VAPID key. For backward compatibility, VAPID key\n    // submitted to pushManager#subscribe must be of type Uint8Array.\n    applicationServerKey: base64ToArray(vapidKey)\n  });\n}\n\n/**\n * Checks if the saved tokenDetails object matches the configuration provided.\n */\nfunction isTokenValid(\n  dbOptions: SubscriptionOptions,\n  currentOptions: SubscriptionOptions\n): boolean {\n  const isVapidKeyEqual = currentOptions.vapidKey === dbOptions.vapidKey;\n  const isEndpointEqual = currentOptions.endpoint === dbOptions.endpoint;\n  const isAuthEqual = currentOptions.auth === dbOptions.auth;\n  const isP256dhEqual = currentOptions.p256dh === dbOptions.p256dh;\n\n  return isVapidKeyEqual && isEndpointEqual && isAuthEqual && isP256dhEqual;\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MessagePayload } from './message-payload';\n\nexport enum MessageType {\n  PUSH_RECEIVED = 'push-received',\n  NOTIFICATION_CLICKED = 'notification-clicked'\n}\n\nexport interface InternalMessage {\n  firebaseMessaging: {\n    type: MessageType;\n    payload: MessagePayload;\n  };\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ConsoleMessageData } from '../interfaces/message-payload';\nimport { CONSOLE_CAMPAIGN_ID } from '../util/constants';\n\nexport function isConsoleMessage(data: unknown): data is ConsoleMessageData {\n  // This message has a campaign ID, meaning it was sent using the\n  // Firebase Console.\n  return typeof data === 'object' && !!data && CONSOLE_CAMPAIGN_ID in data;\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getToken, deleteToken } from '../core/token-management';\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { FirebaseMessaging } from '@firebase/messaging-types';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { NextFn, Observer, Unsubscribe } from '@firebase/util';\nimport { InternalMessage, MessageType } from '../interfaces/internal-message';\nimport {\n  CONSOLE_CAMPAIGN_ID,\n  CONSOLE_CAMPAIGN_ANALYTICS_ENABLED,\n  CONSOLE_CAMPAIGN_NAME,\n  CONSOLE_CAMPAIGN_TIME,\n  DEFAULT_SW_PATH,\n  DEFAULT_SW_SCOPE,\n  DEFAULT_VAPID_KEY\n} from '../util/constants';\nimport { FirebaseApp } from '@firebase/app-types';\nimport { ConsoleMessageData } from '../interfaces/message-payload';\nimport { isConsoleMessage } from '../helpers/is-console-message';\nimport { FirebaseService } from '@firebase/app-types/private';\n\nexport class WindowController implements FirebaseMessaging, FirebaseService {\n  private vapidKey: string | null = null;\n  private swRegistration?: ServiceWorkerRegistration;\n  private onMessageCallback: NextFn<object> | null = null;\n\n  constructor(\n    private readonly firebaseDependencies: FirebaseInternalDependencies\n  ) {\n    navigator.serviceWorker.addEventListener('message', e =>\n      this.messageEventListener(e)\n    );\n  }\n\n  get app(): FirebaseApp {\n    return this.firebaseDependencies.app;\n  }\n\n  async getToken(): Promise<string> {\n    if (!this.vapidKey) {\n      this.vapidKey = DEFAULT_VAPID_KEY;\n    }\n\n    const swRegistration = await this.getServiceWorkerRegistration();\n\n    // Check notification permission.\n    if (Notification.permission === 'default') {\n      // The user hasn't allowed or denied notifications yet. Ask them.\n      await Notification.requestPermission();\n    }\n\n    if (Notification.permission !== 'granted') {\n      throw ERROR_FACTORY.create(ErrorCode.PERMISSION_BLOCKED);\n    }\n\n    return getToken(this.firebaseDependencies, swRegistration, this.vapidKey);\n  }\n\n  async deleteToken(): Promise<boolean> {\n    const swRegistration = await this.getServiceWorkerRegistration();\n\n    return deleteToken(this.firebaseDependencies, swRegistration);\n  }\n\n  /**\n   * Request permission if it is not currently granted.\n   *\n   * @return Resolves if the permission was granted, rejects otherwise.\n   *\n   * @deprecated Use Notification.requestPermission() instead.\n   * https://developer.mozilla.org/en-US/docs/Web/API/Notification/requestPermission\n   */\n  async requestPermission(): Promise<void> {\n    if (Notification.permission === 'granted') {\n      return;\n    }\n\n    const permissionResult = await Notification.requestPermission();\n    if (permissionResult === 'granted') {\n      return;\n    } else if (permissionResult === 'denied') {\n      throw ERROR_FACTORY.create(ErrorCode.PERMISSION_BLOCKED);\n    } else {\n      throw ERROR_FACTORY.create(ErrorCode.PERMISSION_DEFAULT);\n    }\n  }\n\n  // TODO: Deprecate this and make VAPID key a parameter in getToken.\n  usePublicVapidKey(vapidKey: string): void {\n    if (this.vapidKey !== null) {\n      throw ERROR_FACTORY.create(ErrorCode.USE_VAPID_KEY_AFTER_GET_TOKEN);\n    }\n\n    if (typeof vapidKey !== 'string' || vapidKey.length === 0) {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_VAPID_KEY);\n    }\n\n    this.vapidKey = vapidKey;\n  }\n\n  useServiceWorker(swRegistration: ServiceWorkerRegistration): void {\n    if (!(swRegistration instanceof ServiceWorkerRegistration)) {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_SW_REGISTRATION);\n    }\n\n    if (this.swRegistration) {\n      throw ERROR_FACTORY.create(ErrorCode.USE_SW_AFTER_GET_TOKEN);\n    }\n\n    this.swRegistration = swRegistration;\n  }\n\n  /**\n   * @param nextOrObserver An observer object or a function triggered on\n   * message.\n   * @return The unsubscribe function for the observer.\n   */\n  // TODO: Simplify this to only accept a function and not an Observer.\n  onMessage(nextOrObserver: NextFn<object> | Observer<object>): Unsubscribe {\n    this.onMessageCallback =\n      typeof nextOrObserver === 'function'\n        ? nextOrObserver\n        : nextOrObserver.next;\n\n    return () => {\n      this.onMessageCallback = null;\n    };\n  }\n\n  setBackgroundMessageHandler(): void {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_SW);\n  }\n\n  // Unimplemented\n  onTokenRefresh(): Unsubscribe {\n    return () => {};\n  }\n\n  /**\n   * Creates or updates the default service worker registration.\n   * @return The service worker registration to be used for the push service.\n   */\n  private async getServiceWorkerRegistration(): Promise<\n    ServiceWorkerRegistration\n  > {\n    if (!this.swRegistration) {\n      try {\n        this.swRegistration = await navigator.serviceWorker.register(\n          DEFAULT_SW_PATH,\n          {\n            scope: DEFAULT_SW_SCOPE\n          }\n        );\n\n        // The timing when browser updates sw when sw has an update is unreliable by my experiment.\n        // It leads to version conflict when the SDK upgrades to a newer version in the main page, but\n        // sw is stuck with the old version. For example, https://github.com/firebase/firebase-js-sdk/issues/2590\n        // The following line reliably updates sw if there was an update.\n        this.swRegistration.update().catch(() => {\n          /* it is non blocking and we don't care if it failed */\n        });\n      } catch (e) {\n        throw ERROR_FACTORY.create(ErrorCode.FAILED_DEFAULT_REGISTRATION, {\n          browserErrorMessage: e.message\n        });\n      }\n    }\n\n    return this.swRegistration;\n  }\n\n  private async messageEventListener(event: MessageEvent): Promise<void> {\n    if (!event.data?.firebaseMessaging) {\n      // Not a message from FCM\n      return;\n    }\n\n    const { type, payload } = (event.data as InternalMessage).firebaseMessaging;\n\n    if (this.onMessageCallback && type === MessageType.PUSH_RECEIVED) {\n      this.onMessageCallback(payload);\n    }\n\n    const { data } = payload;\n    if (\n      isConsoleMessage(data) &&\n      data[CONSOLE_CAMPAIGN_ANALYTICS_ENABLED] === '1'\n    ) {\n      // Analytics is enabled on this message, so we should log it.\n      await this.logEvent(type, data);\n    }\n  }\n\n  private async logEvent(\n    messageType: MessageType,\n    data: ConsoleMessageData\n  ): Promise<void> {\n    const eventType = getEventType(messageType);\n    const analytics = await this.firebaseDependencies.analyticsProvider.get();\n    analytics.logEvent(eventType, {\n      /* eslint-disable camelcase */\n      message_id: data[CONSOLE_CAMPAIGN_ID],\n      message_name: data[CONSOLE_CAMPAIGN_NAME],\n      message_time: data[CONSOLE_CAMPAIGN_TIME],\n      message_device_time: Math.floor(Date.now() / 1000)\n      /* eslint-enable camelcase */\n    });\n  }\n}\n\nfunction getEventType(messageType: MessageType): string {\n  switch (messageType) {\n    case MessageType.NOTIFICATION_CLICKED:\n      return 'notification_open';\n    case MessageType.PUSH_RECEIVED:\n      return 'notification_foreground';\n    default:\n      throw new Error();\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Returns a promise that resolves after given time passes. */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise<void>(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deleteToken, getToken } from '../core/token-management';\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { FirebaseMessaging } from '@firebase/messaging-types';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport {\n  MessagePayload,\n  NotificationDetails\n} from '../interfaces/message-payload';\nimport { FCM_MSG, DEFAULT_VAPID_KEY } from '../util/constants';\nimport { MessageType, InternalMessage } from '../interfaces/internal-message';\nimport { dbGet } from '../helpers/idb-manager';\nimport { Unsubscribe } from '@firebase/util';\nimport { sleep } from '../helpers/sleep';\nimport { FirebaseApp } from '@firebase/app-types';\nimport { isConsoleMessage } from '../helpers/is-console-message';\nimport { FirebaseService } from '@firebase/app-types/private';\n\n// Let TS know that this is a service worker\ndeclare const self: ServiceWorkerGlobalScope;\n\nexport type BgMessageHandler = (payload: MessagePayload) => unknown;\n\nexport class SwController implements FirebaseMessaging, FirebaseService {\n  private vapidKey: string | null = null;\n  private bgMessageHandler: BgMessageHandler | null = null;\n\n  constructor(\n    private readonly firebaseDependencies: FirebaseInternalDependencies\n  ) {\n    self.addEventListener('push', e => {\n      e.waitUntil(this.onPush(e));\n    });\n    self.addEventListener('pushsubscriptionchange', e => {\n      e.waitUntil(this.onSubChange(e));\n    });\n    self.addEventListener('notificationclick', e => {\n      e.waitUntil(this.onNotificationClick(e));\n    });\n  }\n\n  get app(): FirebaseApp {\n    return this.firebaseDependencies.app;\n  }\n\n  /**\n   * Calling setBackgroundMessageHandler will opt in to some specific\n   * behaviours.\n   * 1.) If a notification doesn't need to be shown due to a window already\n   * being visible, then push messages will be sent to the page.\n   * 2.) If a notification needs to be shown, and the message contains no\n   * notification data this method will be called\n   * and the promise it returns will be passed to event.waitUntil.\n   * If you do not set this callback then all push messages will let and the\n   * developer can handle them in a their own 'push' event callback\n   *\n   * @param callback The callback to be called when a push message is received\n   * and a notification must be shown. The callback will be given the data from\n   * the push message.\n   */\n  setBackgroundMessageHandler(callback: BgMessageHandler): void {\n    if (!callback || typeof callback !== 'function') {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_BG_HANDLER);\n    }\n\n    this.bgMessageHandler = callback;\n  }\n\n  // TODO: Remove getToken from SW Controller.\n  // Calling this from an old SW can cause all kinds of trouble.\n  async getToken(): Promise<string> {\n    if (!this.vapidKey) {\n      // Call getToken using the current VAPID key if there already is a token.\n      // This is needed because usePublicVapidKey was not available in SW.\n      // It will be removed when vapidKey becomes a parameter of getToken, or\n      // when getToken is removed from SW.\n      const tokenDetails = await dbGet(this.firebaseDependencies);\n      this.vapidKey =\n        tokenDetails?.subscriptionOptions?.vapidKey ?? DEFAULT_VAPID_KEY;\n    }\n\n    return getToken(\n      this.firebaseDependencies,\n      self.registration,\n      this.vapidKey\n    );\n  }\n\n  // TODO: Remove deleteToken from SW Controller.\n  // Calling this from an old SW can cause all kinds of trouble.\n  deleteToken(): Promise<boolean> {\n    return deleteToken(this.firebaseDependencies, self.registration);\n  }\n\n  requestPermission(): Promise<void> {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  // TODO: Deprecate this and make VAPID key a parameter in getToken.\n  // TODO: Remove this together with getToken from SW Controller.\n  usePublicVapidKey(vapidKey: string): void {\n    if (this.vapidKey !== null) {\n      throw ERROR_FACTORY.create(ErrorCode.USE_VAPID_KEY_AFTER_GET_TOKEN);\n    }\n\n    if (typeof vapidKey !== 'string' || vapidKey.length === 0) {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_VAPID_KEY);\n    }\n\n    this.vapidKey = vapidKey;\n  }\n\n  useServiceWorker(): void {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  onMessage(): Unsubscribe {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  onTokenRefresh(): Unsubscribe {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  /**\n   * A handler for push events that shows notifications based on the content of\n   * the payload.\n   *\n   * The payload must be a JSON-encoded Object with a `notification` key. The\n   * value of the `notification` property will be used as the NotificationOptions\n   * object passed to showNotification. Additionally, the `title` property of the\n   * notification object will be used as the title.\n   *\n   * If there is no notification data in the payload then no notification will be\n   * shown.\n   */\n  async onPush(event: PushEvent): Promise<void> {\n    const payload = getMessagePayload(event);\n    if (!payload) {\n      return;\n    }\n\n    const clientList = await getClientList();\n    if (hasVisibleClients(clientList)) {\n      // App in foreground. Send to page.\n      return sendMessageToWindowClients(clientList, payload);\n    }\n\n    const notificationDetails = getNotificationData(payload);\n    if (notificationDetails) {\n      await showNotification(notificationDetails);\n    } else if (this.bgMessageHandler) {\n      await this.bgMessageHandler(payload);\n    }\n  }\n\n  async onSubChange(event: PushSubscriptionChangeEvent): Promise<void> {\n    const { newSubscription } = event;\n    if (!newSubscription) {\n      // Subscription revoked, delete token\n      await deleteToken(this.firebaseDependencies, self.registration);\n      return;\n    }\n\n    const tokenDetails = await dbGet(this.firebaseDependencies);\n    await deleteToken(this.firebaseDependencies, self.registration);\n    await getToken(\n      this.firebaseDependencies,\n      self.registration,\n      tokenDetails?.subscriptionOptions?.vapidKey ?? DEFAULT_VAPID_KEY\n    );\n  }\n\n  async onNotificationClick(event: NotificationEvent): Promise<void> {\n    const payload: MessagePayload = event.notification?.data?.[FCM_MSG];\n    if (!payload) {\n      // Not an FCM notification, do nothing.\n      return;\n    } else if (event.action) {\n      // User clicked on an action button.\n      // This will allow devs to act on action button clicks by using a custom\n      // onNotificationClick listener that they define.\n      return;\n    }\n\n    // Prevent other listeners from receiving the event\n    event.stopImmediatePropagation();\n    event.notification.close();\n\n    const link = getLink(payload);\n    if (!link) {\n      return;\n    }\n\n    let client = await getWindowClient(link);\n    if (!client) {\n      // Unable to find window client so need to open one.\n      // This also focuses the opened client.\n      client = await self.clients.openWindow(link);\n      // Wait three seconds for the client to initialize and set up the message\n      // handler so that it can receive the message.\n      await sleep(3000);\n    } else {\n      client = await client.focus();\n    }\n\n    if (!client) {\n      // Window Client will not be returned if it's for a third party origin.\n      return;\n    }\n\n    const message = createNewMessage(MessageType.NOTIFICATION_CLICKED, payload);\n    return client.postMessage(message);\n  }\n}\n\nfunction getMessagePayload({ data }: PushEvent): MessagePayload | null {\n  if (!data) {\n    return null;\n  }\n\n  try {\n    return data.json();\n  } catch (err) {\n    // Not JSON so not an FCM message.\n    return null;\n  }\n}\n\nfunction getNotificationData(\n  payload: MessagePayload\n): NotificationDetails | undefined {\n  if (!payload || typeof payload.notification !== 'object') {\n    return;\n  }\n\n  const notificationInformation: NotificationDetails = {\n    ...payload.notification\n  };\n\n  // Put the message payload under FCM_MSG name so we can identify the\n  // notification as being an FCM notification vs a notification from\n  // somewhere else (i.e. normal web push or developer generated\n  // notification).\n  notificationInformation.data = {\n    ...payload.notification.data,\n    [FCM_MSG]: payload\n  };\n\n  return notificationInformation;\n}\n\n/**\n * @param url The URL to look for when focusing a client.\n * @return Returns an existing window client or a newly opened WindowClient.\n */\nasync function getWindowClient(url: string): Promise<WindowClient | null> {\n  // Use URL to normalize the URL when comparing to windowClients.\n  // This at least handles whether to include trailing slashes or not\n  const parsedURL = new URL(url, self.location.href);\n\n  const clientList = await getClientList();\n\n  for (const client of clientList) {\n    const parsedClientUrl = new URL(client.url, self.location.href);\n    if (parsedClientUrl.host === parsedURL.host) {\n      return client;\n    }\n  }\n\n  return null;\n}\n\n/**\n * @returns If there is currently a visible WindowClient, this method will\n * resolve to true, otherwise false.\n */\nfunction hasVisibleClients(clientList: WindowClient[]): boolean {\n  return clientList.some(\n    client =>\n      client.visibilityState === 'visible' &&\n      // Ignore chrome-extension clients as that matches the background pages\n      // of extensions, which are always considered visible for some reason.\n      !client.url.startsWith('chrome-extension://')\n  );\n}\n\n/**\n * @param payload The data from the push event that should be sent to all\n * available pages.\n * @returns Returns a promise that resolves once the message has been sent to\n * all WindowClients.\n */\nfunction sendMessageToWindowClients(\n  clientList: WindowClient[],\n  payload: MessagePayload\n): void {\n  const message = createNewMessage(MessageType.PUSH_RECEIVED, payload);\n\n  for (const client of clientList) {\n    client.postMessage(message);\n  }\n}\n\nfunction getClientList(): Promise<WindowClient[]> {\n  return self.clients.matchAll({\n    type: 'window',\n    includeUncontrolled: true\n    // TS doesn't know that \"type: 'window'\" means it'll return WindowClient[]\n  }) as Promise<WindowClient[]>;\n}\n\nfunction createNewMessage(\n  type: MessageType,\n  payload: MessagePayload\n): InternalMessage {\n  return {\n    firebaseMessaging: { type, payload }\n  };\n}\n\nfunction showNotification(details: NotificationDetails): Promise<void> {\n  const title = details.title ?? '';\n\n  const { actions } = details;\n  // Note: Firefox does not support the maxActions property.\n  // https://developer.mozilla.org/en-US/docs/Web/API/notification/maxActions\n  const { maxActions } = Notification;\n  if (actions && maxActions && actions.length > maxActions) {\n    console.warn(\n      `This browser only supports ${maxActions} actions. The remaining actions will not be displayed.`\n    );\n  }\n\n  return self.registration.showNotification(title, details);\n}\n\nfunction getLink(payload: MessagePayload): string | null {\n  // eslint-disable-next-line camelcase\n  const link = payload.fcmOptions?.link ?? payload.notification?.click_action;\n  if (link) {\n    return link;\n  }\n\n  if (isConsoleMessage(payload.data)) {\n    // Notification created in the Firebase Console. Redirect to origin.\n    return self.location.origin;\n  } else {\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app';\nimport '@firebase/installations';\nimport {\n  _FirebaseNamespace,\n  FirebaseService\n} from '@firebase/app-types/private';\nimport { FirebaseMessaging } from '@firebase/messaging-types';\nimport {\n  Component,\n  ComponentType,\n  ComponentContainer\n} from '@firebase/component';\nimport { extractAppConfig } from './helpers/extract-app-config';\nimport { FirebaseInternalDependencies } from './interfaces/internal-dependencies';\nimport { ERROR_FACTORY, ErrorCode } from './util/errors';\nimport { WindowController } from './controllers/window-controller';\nimport { SwController } from './controllers/sw-controller';\n\nconst MESSAGING_NAME = 'messaging';\nfunction factoryMethod(\n  container: ComponentContainer\n): FirebaseService & FirebaseMessaging {\n  // Dependencies.\n  const app = container.getProvider('app').getImmediate();\n  const appConfig = extractAppConfig(app);\n  const installations = container.getProvider('installations').getImmediate();\n  const analyticsProvider = container.getProvider('analytics-internal');\n\n  const firebaseDependencies: FirebaseInternalDependencies = {\n    app,\n    appConfig,\n    installations,\n    analyticsProvider\n  };\n\n  if (!isSupported()) {\n    throw ERROR_FACTORY.create(ErrorCode.UNSUPPORTED_BROWSER);\n  }\n\n  if (self && 'ServiceWorkerGlobalScope' in self) {\n    // Running in ServiceWorker context\n    return new SwController(firebaseDependencies);\n  } else {\n    // Assume we are in the window context.\n    return new WindowController(firebaseDependencies);\n  }\n}\n\nconst NAMESPACE_EXPORTS = {\n  isSupported\n};\n\n(firebase as _FirebaseNamespace).INTERNAL.registerComponent(\n  new Component(\n    MESSAGING_NAME,\n    factoryMethod,\n    ComponentType.PUBLIC\n  ).setServiceProps(NAMESPACE_EXPORTS)\n);\n\n/**\n * Define extension behavior of `registerMessaging`\n */\ndeclare module '@firebase/app-types' {\n  interface FirebaseNamespace {\n    messaging: {\n      (app?: FirebaseApp): FirebaseMessaging;\n      isSupported(): boolean;\n    };\n  }\n  interface FirebaseApp {\n    messaging(): FirebaseMessaging;\n  }\n}\n\nfunction isSupported(): boolean {\n  if (self && 'ServiceWorkerGlobalScope' in self) {\n    // Running in ServiceWorker context\n    return isSWControllerSupported();\n  } else {\n    // Assume we are in the window context.\n    return isWindowControllerSupported();\n  }\n}\n\n/**\n * Checks to see if the required APIs exist.\n */\nfunction isWindowControllerSupported(): boolean {\n  return (\n    'indexedDB' in window &&\n    indexedDB !== null &&\n    navigator.cookieEnabled &&\n    'serviceWorker' in navigator &&\n    'PushManager' in window &&\n    'Notification' in window &&\n    'fetch' in window &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n\n/**\n * Checks to see if the required APIs exist within SW Context.\n */\nfunction isSWControllerSupported(): boolean {\n  return (\n    'indexedDB' in self &&\n    indexedDB !== null &&\n    'PushManager' in self &&\n    'Notification' in self &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n"],"names":[],"mappings":"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"}